{"version":3,"sources":["components/layout/Searchbar/Searchbar.js","components/layout/Navigation/NotLoggedUser/NotLoggedUser.js","services/plant.service.js","services/cart.service.js","services/auth.service.js","components/layout/Navigation/LoggedUser/LoggedUser.js","components/layout/Navigation/DropdownItem/Dropdownitem.js","logo.svg","components/layout/Navigation/Navigation.js","homepage_plant.png","about_us_image.png","components/pages/Footer/Footer.js","components/pages/Home/Home.js","components/pages/Login/Login.js","services/upload.service.js","components/pages/Signup/Signup.js","components/pages/Profile/Profile.js","services/user.service.js","components/pages/PlantForm/PlantForm.js","services/comment.service.js","components/pages/CommentForm/CommentForm.js","components/pages/PlantDetails/RemoveItem/RemoveItem.js","components/pages/PlantDetails/Editplant/Editplant.js","services/message.service.js","components/pages/SendMessage/SendMessage.js","components/pages/PlantDetails/MessageForm/MessageForm.js","components/pages/PlantDetails/PlantDetails.js","components/pages/PlantsList/PlantsList.js","components/pages/CartItem/CartItem.js","components/pages/Cart/Cart.js","components/pages/messages/MessageList/MessageList.js","components/pages/Checkout/Checkout.js","components/routes/index.js","App.js","reportWebVitals.js","index.js","utils/index.js"],"names":["Searchbar","props","useState","searchValue","setSearchValue","displayPlants","changeToggle","toggle","clearState","FormControl","className","type","placeholder","value","onChange","e","target","setTimeout","handleChange","NotLoggedUser","Nav","Link","as","to","NavDropdown","Divider","PlantService","getPlants","instance","get","getPlant","id","createPlant","plant","post","deletePlant","delete","editPlant","put","this","axios","create","baseURL","process","withCredentials","CartService","getCart","createCart","cart","editCart","plantId","removeItem","AuthService","signup","username","password","email","address","age","role","avatar","login","logout","isloggedin","LoggedUser","authService","then","storeUser","undefined","catch","err","console","log","title","Navbar","Text","href","loggedUser","alt","src","Item","_id","onClick","DropdownItem","Dropdown","image","name","price","Navigation","cartService","plants","setPlants","plantsList","setPlantsList","setToggle","searching","setSearching","total","setTotal","useEffect","plantService","refreshTotal","res","data","length","items","collapseOnSelect","expand","variant","Container","Brand","logoImg","Toggle","Collapse","autoclose","show","onBlur","onToggle","isOpen","metadata","filteredPlants","filter","toLowerCase","includes","Menu","map","Footer","bgColor","network","url","Home","Row","Col","xs","md","lg","homepage_image","about_image","Login","setUsername","setPassword","error","setErrorLogin","handleInput","sm","Form","onSubmit","preventDefault","history","push","response","message","Group","controlId","Label","Control","Button","UploadService","uploadImg","imageForm","formatSignDate","require","uploadService","Signup","setEmail","setAddress","setAge","setRole","setAvatar","isLoading","setIsLoading","uploadData","FormData","append","files","cloudinary_url","alert","handleFile","tmp","user","apiKey","language","options","types","fields","componentRestrictions","country","onPlaceSelected","place","max","Check","inline","label","defaultChecked","Spinner","animation","disabled","userService","getUsers","getUser","editUser","createUser","deleteUSer","Profile","animtion","PlantForm","setName","setImage","size","setSize","setType","toxic","setToxic","location","setLocation","temperature","setTemperature","watering","setWatering","setPrice","delivery","setDelivery","setError","newValue","checked","splice","indexOf","description","sellerId","CommentService","getComments","getComment","deleteComment","createComment","comment","commentService","CommentForm","content","setContent","rating","setRating","hover","setHover","authorId","Array","star","idx","ratingValue","color","onMouseEnter","onMouseLeave","RemoveItem","removePlant","EditPlant","match","params","findPlant","MessageService","getMessages","getMessage","createMessage","deleteMessage","messageService","SendMessage","seller","subject","setSubject","plantSellerId","setPlantSellerId","success","getOneUser","receiverId","MessageForm","showForm","setShowForm","closeModal","block","Modal","onHide","Header","closeButton","Title","Body","PlantDetails","formatDate","plantsDetails","setPlantsDetails","setUser","getOnePlant","Card","style","width","Img","ListGroup","ListGroupItem","split","sellerDetails","PlantsList","CartItem","userCart","setId","el","Cart","setCart","cartFound","totalPrice","reduce","a","b","MessageList","setMessage","messages","createdAt","Checkout","cartId","cartSellerId","plantFound","Routes","exact","path","render","App","setLoggedUser","setRefreshTotal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","module","exports","date","dateF","Date","month","getMonth","day","getDate","year","getFullYear","join","today"],"mappings":"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","file":"static/js/main.6091f53c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { FormControl } from \"react-bootstrap\";\nimport \"./Searchbar.css\"\n\nconst Searchbar = (props) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const { displayPlants } = props;\n  const { changeToggle } = props\n  const { toggle } = props\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setSearchValue(value);\n    displayPlants(value);\n    setTimeout(() => {\n        clearState(searchValue);\n      changeToggle(toggle)\n    }, 5000);\n    \n  };\n  const clearState = (searchValue) => {\n\n    setSearchValue(\"\")\n  } \n\n  return (\n    <>\n      <FormControl\n        className=\"searchbar__input rounded-pill\"\n        type=\"search\"\n        placeholder=\"&#x1F50D; Search for a plant\"\n        aria-label=\"Search\"\n        value={searchValue}\n        onChange={(e) => handleChange(e)}\n      />\n    </>\n  );\n};\n\nexport default Searchbar;\n","import { Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n//Style in LoggedUser.css\n\n const NotLoggedUser = () => {\n\n    return (\n      <>\n        <Nav.Link className=\"navbar__large navbar__large__text text-light\" as={Link} to=\"/login\">\n          Sign in\n        </Nav.Link>\n\n        <div className=\"navbar__collapsed\">\n          <NavDropdown.Divider />\n          <Nav.Link className=\"navbar__collapsed__text text-light\" as={Link} to=\"/login\">\n            Sign in\n          </Nav.Link>\n        </div>\n      </>\n    );\n}\n\nexport default NotLoggedUser","import axios from \"axios\";\n\nclass PlantService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/plant`,\n      withCredentials: true\n    });\n  }\n\n  getPlants = () => this.instance.get(\"/\");\n  getPlant = (id) => this.instance.get(`/${id}`);\n  createPlant = (plant) => this.instance.post(\"/\", plant);\n  deletePlant = (id) => this.instance.delete(`/${id}`);\n  editPlant = (id, plant) => this.instance.put(`/${id}`, plant);\n}\n\nexport default PlantService;","import axios from \"axios\";\n\nclass CartService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/cart`,\n      withCredentials: true,\n    });\n  }\n\n  getCart = (id) => this.instance.get(`/${id}`);\n  createCart = (cart) => this.instance.post(\"/\", cart);\n  editCart = (id, plantId) => this.instance.put(`/${id}`, {plantId});\n  removeItem = (id, plantId) => this.instance.put(`/delete/${id}`, {plantId});\n}\n\nexport default CartService;\n","import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true,\n    });\n  }\n\n  signup = (\n    username,\n    password,\n    email,\n    address,\n    age,\n    role,\n    avatar = \"\"\n  ) =>\n    this.instance.post(\"/signup\", {\n      username,\n      password,\n      email,\n      address,\n      age,\n      role,\n      avatar\n    });\n  login = (username, password) =>\n    this.instance.post(\"/login\", { username, password });\n  logout = () => this.instance.get(\"/logout\");\n  isloggedin = () => this.instance.post(\"/isloggedin\");\n}\n\nexport default AuthService;\n","import { Link } from \"react-router-dom\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport AuthService from \"../../../../services/auth.service\";\nimport \"./LoggedUser.css\";\n\nconst LoggedUser = (props) => {\n  const authService = new AuthService();\n\n  const logout = () => {\n    authService\n      .logout()\n      .then(() => props.storeUser(undefined))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <NavDropdown\n        className=\"navbar__large\"\n        title={\n          <Navbar.Text>\n            Welcome,\n            <a href=\"#/\"> {props.loggedUser.username} </a>\n            <img\n              alt=\"user avatar\"\n              className=\"navbar__avatar rounded-circle\"\n              src={props.loggedUser.avatar}\n            />\n          </Navbar.Text>\n        }\n        id=\"collasible-nav-dropdown\"\n      >\n        <NavDropdown.Item as={Link} to={`/${props.loggedUser.username}`}>\n          My profile\n        </NavDropdown.Item>\n        <NavDropdown.Item\n          as={Link}\n          to={`/message-list/${props.loggedUser._id}`}\n        >\n          Messages\n        </NavDropdown.Item>\n        <NavDropdown.Item as={Link} to=\"/plants\">\n          Checkout our plants\n        </NavDropdown.Item>\n        <NavDropdown.Item as={Link} to=\"/new-plant\">\n          Add a plant\n        </NavDropdown.Item>\n        <NavDropdown.Item as={Link} to=\"/new-comment\">\n          Add a comment\n        </NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item as={Link} to=\"/\" onClick={logout}>\n          Logout\n        </NavDropdown.Item>\n      </NavDropdown>\n\n      <div className=\"navbar__collapsed\">\n        <NavDropdown.Divider />\n        <Nav.Link\n          className=\"navbar__collapsed__text\"\n          as={Link}\n          to={`/${props.loggedUser.username}`}\n        >\n          My profile\n        </Nav.Link>\n        <NavDropdown.Divider />\n        <Nav.Link\n          className=\"navbar__collapsed__text\"\n          as={Link}\n          to={`/message-list/${props.loggedUser._id}`}\n        >\n          Messages\n        </Nav.Link>\n        <NavDropdown.Divider />\n        <Nav.Link className=\"navbar__collapsed__text\" as={Link} to=\"/new-plant\">\n          Sell a plant\n        </Nav.Link>\n        <NavDropdown.Divider />\n        <Nav.Link\n          className=\"navbar__collapsed__text\"\n          as={Link}\n          to=\"/\"\n          onClick={logout}\n        >\n          Logout\n        </Nav.Link>\n      </div>\n    </>\n  );\n};\n\nexport default LoggedUser;\n","import { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Dropdownitem.css\";\n\nconst DropdownItem = ({ plant }) => {\n  return plant ? (\n    <Dropdown.Item as={Link} to={`/plant/${plant._id}`}>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <img src={plant.image} alt={plant.name} />\n        </div>\n        <div className=\"col-7\">\n          <p>{plant.name}</p>\n        </div>\n        <div className=\"col-2\">\n          <p>€{plant.price}</p>\n        </div>\n      </div>\n    </Dropdown.Item>\n  ) : (\n    <p>Loading......</p>\n  );\n};\n\nexport default DropdownItem;\n","export default __webpack_public_path__ + \"static/media/logo.88e3a3cb.svg\";","import \"./navigation.css\";\nimport { Link } from \"react-router-dom\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport React, { useState, useEffect } from \"react\";\nimport NotLoggedUser from \"./NotLoggedUser/NotLoggedUser\";\nimport PlantService from \"../../../services/plant.service\";\nimport CartService from \"../../../services/cart.service\";\nimport LoggedUser from \"./LoggedUser/LoggedUser\";\nimport DropdownItem from \"./DropdownItem/Dropdownitem\";\nimport { Container, Dropdown, Nav, Navbar, Row } from \"react-bootstrap\";\nimport logoImg from \"../../../logo.svg\";\nimport { FaShoppingCart } from \"react-icons/fa\";\n\nconst Navigation = (props) => {\n  const cartService = new CartService();\n\n  const [plants, setPlants] = useState([]);\n  const [plantsList, setPlantsList] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const plantService = new PlantService();\n\n    refreshTotal();\n\n    plantService.getPlants().then((res) => setPlantsList(res.data)).catch(err => console.log(err));\n    \n  }, []);\n\n  useEffect(() => {\n    if (!searching || plants.length === 0) setToggle(false);\n    else setToggle(true);\n  }, [plants, searching]);\n\n  useEffect(() => refreshTotal());\n\n  const displayPlants = (searchValue) => {\n    if (searchValue && searchValue.length > 0) setSearching(true);\n    else setSearching(false);\n\n    const filteredPlants = plantsList.filter((plant) =>\n      plant.name.toLowerCase().includes(searchValue.toLowerCase())\n    );\n\n    setPlants(filteredPlants);\n  };\n\n  const changeToggle = (toggle) => {\n    toggle && setToggle(false);\n  };\n\n  const refreshTotal = () => {\n    cartService\n      .getCart(props.loggedUser?.cart)\n      .then((res) => res.data.items.length && setTotal(res.data.items.length))\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <Navbar\n      className=\"navbar fixed-top\"\n      collapseOnSelect\n      expand=\"lg\"\n      variant=\"dark\"\n    >\n      <Container>\n        <Navbar.Brand className=\"navbar__logo\" as={Link} to=\"/\">\n          <img alt=\"logo\" src={logoImg} /> Plant B\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            <Dropdown\n              className=\"d-inline mx-2 \"\n              autoclose=\"inside\"\n              show={toggle}\n              onBlur={(e) => (e.target.value = \"\")}\n              onToggle={(isOpen, e, metadata) => {\n                if (plants.length === 0) setToggle(false);\n                else if (isOpen) setToggle(isOpen);\n                else if (e.target.type !== \"button\") setToggle(isOpen);\n              }}\n            >\n              <Dropdown.Toggle\n                className=\"navbar__toggle\"\n                id=\"dropdown-autoclose-inside\"\n              >\n                <Searchbar\n                  toggle={toggle}\n                  changeToggle={changeToggle}\n                  displayPlants={displayPlants}\n                />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"dropdown__menu\">\n                {plants.length > 0 &&\n                  plants.map((plant) => (\n                    <Link to={`/plant/${plant._id}`}>\n                      <DropdownItem key={plant._id} plant={plant} />\n                    </Link>\n                  ))}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n          {props.loggedUser ? (\n            <>\n              <Navbar.Brand\n                className=\"navbar__cart my-0 mx-5\"\n                as={Link}\n                to={`/cart`}\n              >\n                <p>\n                  <FaShoppingCart />\n                  &nbsp; &#40; {total} &#41;\n                </p>\n              </Navbar.Brand>\n              <Nav.Link\n                className=\"navbar__cart__collapsed\"\n                as={Link}\n                to={`/cart`}\n              >\n                Cart &nbsp; &#40; {total} &#41;\n              </Nav.Link>\n\n              <Nav>\n                <LoggedUser {...props} />\n              </Nav>\n            </>\n          ) : (\n            <NotLoggedUser />\n          )}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/homepage_plant.174b6a00.png\";","export default __webpack_public_path__ + \"static/media/about_us_image.d34c4d2c.png\";","import \"./Footer.css\";\nimport { SocialIcon } from \"react-social-icons\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"mt-5 d-flex justify-content-center\">\n      <SocialIcon\n        bgColor=\"white\"\n        className=\"m-2\"\n        target=\"_blank\"\n        network=\"twitter\"\n        url=\"https://github.com/alberto-massa/PlantB\"\n      />\n      <SocialIcon\n        bgColor=\"white\"\n        className=\"m-2\"\n        target=\"_blank\"\n        network=\"facebook\"\n        url=\"https://github.com/alberto-massa/PlantB\"\n      />\n      <SocialIcon\n        bgColor=\"white\"\n        className=\"m-2\"\n        target=\"_blank\"\n        network=\"instagram\"\n        url=\"https://github.com/alberto-massa/PlantB\"\n      />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Row, Col, Container } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\";\nimport homepage_image from \"./../../../homepage_plant.png\"\nimport about_image from \"./../../../about_us_image.png\";\nimport \"./Home.css\"\nimport Footer from \"./../../pages/Footer/Footer\"\n\nconst Home = () => {\n\n\n    return (\n      <>\n        <Container className=\"homepage mt-5 mb-5\">\n          <Row className=\"homepage__row justify-content-center align-items-center\">\n            <Col xs={false} md={false} lg={1} />\n            <Col className=\"homepage__col__text\" xs={12} md={12} lg={5}>\n              <h1>Plant B</h1>\n              <h3>Your favorite plant's shop in your neighborhood 🌱</h3>\n              <p>\n                Plants reduce stress levels and boost your mood - making them\n                perfect for your home and your work space, too.\n              </p>\n              <Link to={\"/plants\"}>\n                <button className=\"homepage__btn\">Check the latest plants</button>\n              </Link>\n            </Col>\n            <Col xs={12} md={12} lg={5}>\n              <img alt=\"plant\" src={homepage_image} />\n            </Col>\n            <Col xs={false} md={false} lg={1} />\n          </Row>\n        </Container>\n\n        <br/>\n\n        <Container className=\"about mt-3\">\n          <Row className=\"justify-content-center align-items-center\">\n            <Col xs={false} md={false} lg={1} />\n            <Col xs={12} md={12} lg={5}>\n              <img className=\"rounded-circle\" alt=\"plant\" src={about_image} />\n            </Col>\n            <Col className=\"\" xs={12} md={12} lg={5}>\n              <h2>About us</h2>\n              <p>\n                <del>We are 2 junior web developers doing a project--</del> We\n                love plants, and we wanted to make them accessible to everyone, as easy as possible, so we created this community.\n              </p>\n            </Col>\n\n            <Col xs={false} md={false} lg={1} />\n          </Row>\n        </Container>\n\n        <Footer/>\n      </>\n    );\n}\n\nexport default Home\n","import React, { useState } from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport AuthService from \"../../../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport \"../../../App.css\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [error, setErrorLogin] = useState(\"\")\n\n\n  const authService = new AuthService();\n  \n  const handleInput = (e) => {\n    const { name, value } = e.target;\n    name === 'username' ? setUsername(value) : setPassword(value)\n  };\n  \n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    authService\n      .login(username, password)\n      .then((res) => {\n        props.storeUser(res.data);\n        props.history.push(\"/\");\n      })\n      .catch((err) => {\n        setErrorLogin(err.response.data.message)\n        setTimeout(() => setErrorLogin(undefined),2500)\n      });\n  };\n\n  return (\n    <Container className=\"login\">\n      <Row className=\"mt-5 d-flex justify-content-center\">\n        <Col xs={8} sm={8} lg={6}>\n          <Form className=\"container\" onSubmit={handleFormSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"username\"\n                value={username}\n                onChange={(e) => handleInput(e)}\n                type=\"text\"\n                placeholder=\"Enter username\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => handleInput(e)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n              <Button variant=\"success\" type=\"submit\" className=\"rounded-pill\">\n                Submit\n              </Button>\n            </div>\n          </Form>\n\n          {error && <p id=\"errorMessage\">{error}</p>}\n\n          <p className=\"text-center mt-4\">\n            Not registered? <Link to={\"/register\"}>Sign up</Link>\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","import axios from 'axios'\n\nclass UploadService {\n\n    constructor(){\n\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/uploads`,\n\n        })\n    }\n    uploadImg = (imageForm) => this.instance.post(\"/image\", imageForm)\n}\n\nexport default UploadService;","import AuthService from \"./../../../services/auth.service\";\nimport React, { useState } from \"react\";\nimport { Container, Form, Button, Spinner, Row, Col } from \"react-bootstrap\";\nimport UploadService from \"./../../../services/upload.service\";\nimport \"./Signup.css\"\nimport \"../../../App.css\"\nimport Autocomplete from \"react-google-autocomplete\";\n\nconst { formatSignDate } = require(\"../../../utils/index\");\n\nconst authService = new AuthService();\nconst uploadService = new UploadService();\n\nconst Signup = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [role, setRole] = useState(\"\");\n  const [avatar, setAvatar] = useState(\n    \"https://res.cloudinary.com/dubhsyrde/image/upload/v1633536992/orl5czm2lgcz9a2fzkhu.svg\"\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setErrorLogin] = useState(\"\")\n\n\n  const clearState = () => {\n    setUsername(\"\");\n    setPassword(\"\");\n    setEmail(\"\");\n    setAddress(\"\");\n    setAge(0);\n    setRole(\"\");\n    setAvatar(\"\");\n  };\n\n  \n\n  const handleChange = (e) => {\n    let { value, name, type } = e.target;\n    type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\n\n    switch (name) {\n      case \"username\":\n        setUsername(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      case \"email\":\n        setEmail(value);\n        break;\n        \n      case \"age\":\n        setAge(value);\n        break;\n\n      case \"role\":\n        setRole(value);\n        break;\n\n      case \"avatar\":\n        setAvatar(value);\n        break;\n\n      default:\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    let tmp = \"\";\n    role ? (tmp = \"Shop\") : (tmp = \"User\");\n\n    authService\n      .signup(username, password, email, address, age, tmp, avatar)\n      .then((user) => {\n        props.storeUser(user.data.user);\n        console.log(user)\n        props.history.push(\"/\");\n      })\n      .catch((err) =>{\n        setErrorLogin(err.response.data.message)\n        setTimeout(() => setErrorLogin(undefined),2500)\n        console.log(err)\n      });\n\n    clearState();\n  };\n\n  const handleFile = (e) => {\n    setIsLoading(true);\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageData\", e.target.files[0]);\n\n    uploadService\n      .uploadImg(uploadData)\n      .then((res) => {\n        \n        setIsLoading(false);\n        setAvatar(res.data.cloudinary_url);\n      })\n      .catch((err) => alert(\"Error, image not uploaded\", err));\n  };\n\n  return (\n    <Container className=\"signup\">\n      <Row className=\"mt-3 d-flex justify-content-center\">\n        <Col xs={6} sm={8} lg={6}>\n          <Row>\n            <Form.Group className=\"mb-3 text-center\" controlId=\"avatar\">\n              <img className=\"signup__avatar rounded-circle\" alt=\"default avatar\" src={avatar} />\n              <Form.Label className=\"btn btn-outline-success rounded-pill\">\n                Change picture\n              </Form.Label>\n\n              <Form.Control\n                className=\"form-control-hide\"\n                name=\"avatar\"\n                onChange={(e) => handleFile(e)}\n                type=\"file\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"username\"\n                value={username}\n                onChange={(e) => handleChange(e)}\n                type=\"text\"\n                placeholder=\"Enter username\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => handleChange(e)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"email\">\n              <Form.Label>Email*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => handleChange(e)}\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"address\">\n              <Form.Label>Address*</Form.Label>\n              <Autocomplete\n                className=\"form-control rounded-pill\"\n                apiKey={process.env.REACT_APP_API_KEY_MAPS}\n                language=\"en\"\n                name=\"address\"\n                options={{\n                  types: [\"address\"],\n                  fields: [\"(formatted_address)\"],\n                  componentRestrictions: { country: \"es\" },\n                }}\n                onPlaceSelected={(place) => {\n                    setAddress(place.name)}\n                // onChange={(e) => handleChange(e)\n                }\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"age\">\n              <Form.Label>Date of Birth*</Form.Label>\n              <Form.Control\n                className=\"rounded-pill\"\n                name=\"age\"\n                value={age}\n                max={formatSignDate()}\n                onChange={(e) => handleChange(e)}\n                type=\"date\"\n                placeholder=\"Age\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"role\">\n              <Form.Label>Are you a local store / company?</Form.Label>\n              <div key={`inline-radio`}>\n                <Form.Check\n                  inline\n                  label=\"Yes\"\n                  name=\"role\"\n                  type=\"radio\"\n                  id={`inline-radio-1`}\n                  value={true}\n                  onChange={(e) => handleChange(e)}\n                />\n                <Form.Check\n                  className=\"success\"\n                  defaultChecked\n                  inline\n                  label=\"No\"\n                  name=\"role\"\n                  type=\"radio\"\n                  id={`inline-radio-2`}\n                  value={false}\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n            </Form.Group>\n\n            <Row className=\"justify-content-center mt-2 mb-2\">\n              {isLoading && <Spinner animation=\"border\" variant=\"success\" />}\n            </Row>\n\n            <div className=\"d-grid gap-2\">\n              <Button\n                className=\"rounded-pill\"\n                disabled={isLoading}\n                variant=\"success\"\n                type=\"submit\"\n              >\n                {isLoading ? \"Loading...\" : \"Submit\"}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n      {error && <p id=\"errorMessage\">{error}</p>}\n    </Container>\n  );\n};\n\nexport default Signup;\n","import {  Col, Row, Button, Container, Form, Spinner } from \"react-bootstrap\";\nimport \"./Profile.css\"\nimport React, {useState } from \"react\";\nimport UserService from \"./../../../services/user.service\"\nimport UploadService from \"./../../../services/upload.service\"\n\n\nconst userService = new UserService();\nconst uploadService = new UploadService();\n\nconst Profile = ({ props, loggedUser }) => {\n\n  const [username, setUsername] = useState(loggedUser.username);\n  const [avatar, setAvatar] = useState(loggedUser.avatar);\n  const [email, setEmail] = useState(loggedUser.email);\n  const [address, setAddress] = useState(loggedUser.address);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const clearState = () => {\n    setUsername(\"\");\n    setAvatar(\"\");\n    setEmail(\"\");\n    setAddress(\"\");\n  };\n\n  const handleChange = (e) => {\n\n    let { value, name } = e.target;\n\n    switch (name) {\n      case \"username\":\n        setUsername(value);\n        break;\n      case \"avatar\":\n        setAvatar(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"address\":\n        setAddress(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmitUpdate = (e) => {\n\n    e.preventDefault();\n\n    console.log({\n      username,\n      avatar,\n      email,\n      address,\n    });\n\n    userService\n      .editUser(loggedUser._id, {\n        username,\n        avatar,\n        email,\n        address,\n      })\n      .then((res) => {\n        console.log(res)\n        clearState();\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleFile = (e) => {\n    setIsLoading(true);\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageData\", e.target.files[0]);\n\n    uploadService\n      .uploadImg(uploadData)\n      .then((res) => {\n        setIsLoading(false);\n        setAvatar(res.data.cloudinary_url);\n      })\n      .catch((err) => alert(\"Error, image not uploaded \"));\n  };\n\n  return (\n    <>\n      {loggedUser ? (\n        <>\n          <Container className=\"profile\">\n            <Row className=\"mt-5 d-flex justify-content-center\">\n              <Col className=\"profile__col\" xs={8} sm={8} lg={6}>\n                <h1 className=\"text-center mt-2 mb-3\">Edit your profile</h1>\n                <Form onSubmit={handleSubmitUpdate}>\n                  <Form.Group className=\"mb-3 text-center\" controlId=\"avatar\">\n                    <img\n                      className=\"signup__avatar rounded-circle\"\n                      alt=\"default avatar\"\n                      src={avatar}\n                    />\n                    <Form.Label className=\"btn btn-outline-success rounded-pill\">\n                      Change picture\n                    </Form.Label>\n\n                    <Form.Control\n                      className=\"form-control-hide\"\n                      name=\"avatar\"\n                      onChange={(e) => handleFile(e)}\n                      type=\"file\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\" controlId=\"name\">\n                    <Form.Label>Username: </Form.Label>\n                    <Form.Control\n                      onChange={(e) => handleChange(e)}\n                      name=\"username\"\n                      value={username}\n                      type=\"text\"\n                      placeholder={loggedUser.username}\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\" controlId=\"name\">\n                    <Form.Label>Email </Form.Label>\n                    <Form.Control\n                      onChange={(e) => handleChange(e)}\n                      name=\"email\"\n                      value={email}\n                      type=\"text\"\n                      placeholder={loggedUser.email}\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\" controlId=\"name\">\n                    <Form.Label>Address </Form.Label>\n                    <Form.Control\n                      onChange={(e) => handleChange(e)}\n                      name=\"address\"\n                      type=\"text\"\n                      placeholder={loggedUser.address}\n                    />\n                  </Form.Group>\n\n                  {isLoading && <Spinner animtion=\"border\" variant=\"success\" />}\n                  \n                  <div className=\"d-grid gap-2\">\n                    <Button\n                      disabled={isLoading}\n                      variant=\"success\"\n                      type=\"submit\"\n                      className=\"rounded-pill mb-3 mt-2 justify-content-center\"\n                    >\n                      {isLoading ? \"Loading...\" : \"Submit changes\"}\n                    </Button>\n                  </div>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","import axios from \"axios\";\r\n\r\nclass UserService {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/user`,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  getUsers = () => this.instance.get(\"/\");\r\n  getUser = (username) => this.instance.get(`/${username}`);\r\n  editUser = (id, plant) => this.instance.put(`/${id}`, plant);\r\n  createUser = (user) => this.instance.post(\"/\", user);\r\n  deleteUSer = (id) => this.instance.delete(`/${id}`);\r\n}\r\n\r\nexport default UserService;\r\n","import React, { useState } from \"react\";\nimport { Button, Form, Row, Spinner, Container, Col } from \"react-bootstrap\";\nimport PlantService from \"../../../services/plant.service\";\nimport UploadService from \"../../../services/upload.service\";\nimport \"../../../App.css\"\nimport \"./PlantForm.css\"\n\nconst plantService = new PlantService();\nconst uploadService = new UploadService();\n\nconst PlantForm = (props) => {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [toxic, setToxic] = useState(false);\n  const [location, setLocation] = useState([]);\n  const [temperature, setTemperature] = useState(0);\n  const [watering, setWatering] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [delivery, setDelivery] = useState(3);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\")\n\n\n  const clearState = () => {\n    setName(\"\");\n    setImage(\"\");\n    setSize(\"\");\n    setType(\"\");\n    setToxic(false);\n    setLocation([]);\n    setTemperature(0);\n    setWatering(\"\");\n    setPrice(0);\n    setDelivery(3);\n  };\n\n  const handleChange = (e) => {\n    let { value, name, type } = e.target;\n\n    let newValue = [...location];\n    if (name === \"location\" && e.target.checked) {\n      newValue.push(value);\n    }\n    if (name === \"location\" && !e.target.checked) {\n      newValue.splice(newValue.indexOf(value), 1);\n    }\n\n    type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"avatar\":\n        setImage(value);\n        break;\n      case \"size\":\n        setSize(value);\n        break;\n      case \"type\":\n        setType(value);\n        break;\n      case \"toxic\":\n        setToxic(value);\n        break;\n      case \"location\":\n        setLocation(newValue);\n        break;\n      case \"price\":\n        setPrice(value);\n        break;\n      case \"temperature\":\n        setTemperature(value);\n        break;\n      case \"watering\":\n        setWatering(value);\n        break;\n      case \"delivery\":\n        setDelivery(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    plantService\n      .createPlant({\n        name,\n        image,\n        description: { size, type, toxic, location, temperature, watering },\n        sellerId: props.loggedUser,\n        price,\n        delivery,\n      })\n      .then(() => {\n        clearState();\n      })\n      .catch((err) => {\n        console.log(err)\n        setError(err.response.data.message)\n        setTimeout(() => setError(undefined),2500)\n      });\n  };\n\n  const handleFile = (e) => {\n    setIsLoading(true);\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageData\", e.target.files[0]);\n\n    uploadService\n      .uploadImg(uploadData)\n      .then((res) => {\n        setIsLoading(false);\n        setImage(res.data.cloudinary_url);\n      })\n      .catch((err) => alert(\"Error, image not uploaded \"));\n  };\n\n  return (\n    <Container className=\"sell__form\">\n      <h1 className=\"text-center mb-3\">Sell a plant</h1>\n      <Row className=\"justify-content-center d-flex\">\n        <Col className=\"d-flex justify-content-center\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"name\">\n              <Form.Label>Name*: </Form.Label>\n              <Form.Control\n                onChange={(e) => handleChange(e)}\n                name=\"name\"\n                value={name}\n                type=\"text\"\n                placeholder=\"Plant's name\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"image\">\n              <Form.Label>Image*: </Form.Label>\n              <Form.Control\n                onChange={(e) => handleFile(e)}\n                name=\"image\"\n                type=\"file\"\n                placeholder=\"Plant's image\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"size\">\n              <Form.Label>Size*: </Form.Label>\n              <Form.Control\n                onChange={(e) => handleChange(e)}\n                name=\"size\"\n                value={size}\n                type=\"text\"\n                placeholder=\"Plant's sizes\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"toxic\">\n              <Form.Label>Is it toxic for animals?*</Form.Label>\n              {[\"radio\"].map((type) => (\n                <div key={`inline-${type}`}>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    name=\"toxic\"\n                    type=\"radio\"\n                    id={`inline-${type}-1`}\n                    value={true}\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    name=\"toxic\"\n                    type=\"radio\"\n                    id={`inline-${type}-2`}\n                    value={false}\n                    onChange={(e) => handleChange(e)}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"location\">\n              <Form.Label>Location?*</Form.Label>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Check\n                    inline\n                    label=\"Indoors\"\n                    name=\"location\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                    onChange={(e) => handleChange(e)}\n                    value=\"Indoors\"\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Outdoors\"\n                    name=\"location\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                    onChange={(e) => handleChange(e)}\n                    value=\"Outdoors\"\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {props.loggedUser.role === \"Shop\" && (\n              <>\n                <Form.Group className=\"mb-3\" controlId=\"type\">\n                  <Form.Label>Type*: </Form.Label>\n                  <Form.Control\n                    onChange={(e) => handleChange(e)}\n                    name=\"type\"\n                    value={type}\n                    type=\"text\"\n                    placeholder=\"Plant's type\"\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"temperature\">\n                  <Form.Label>Temperature*: </Form.Label>\n                  <Form.Control\n                    onChange={(e) => handleChange(e)}\n                    name=\"temperature\"\n                    value={temperature}\n                    type=\"number\"\n                    placeholder=\"Temperature\"\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"watering\">\n                  <Form.Label>Watering*: </Form.Label>\n                  <Form.Control\n                    onChange={(e) => handleChange(e)}\n                    name=\"watering\"\n                    value={watering}\n                    type=\"text\"\n                    placeholder=\"Watering\"\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"delivery\">\n                  <Form.Label>Delivery time (days)*: </Form.Label>\n                  <Form.Control\n                    onChange={(e) => handleChange(e)}\n                    name=\"delivery\"\n                    value={delivery}\n                    type=\"number\"\n                    placeholder=\"Indicate an average of days\"\n                  />\n                </Form.Group>\n              </>\n            )}\n\n            <Form.Group className=\"mb-3\" controlId=\"price\">\n              <Form.Label>Price*: </Form.Label>\n              <Form.Control\n                onChange={(e) => handleChange(e)}\n                name=\"price\"\n                value={price}\n                type=\"number\"\n                placeholder=\"Price\"\n              />\n              €\n            </Form.Group>\n\n            {isLoading && <Spinner animtion=\"border\" variant=\"success\" />}\n            {error && <p id=\"errorMessage\">{error}</p>}\n            <div className=\"d-grid gap-2\">\n              <Button className=\"rounded-pill\" disabled={isLoading} variant=\"success\" type=\"submit\">\n                {isLoading ? \"Loading...\" : \"Submit\"}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PlantForm;\n","import axios from \"axios\";\n\nclass CommentService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/comment`,\n      withCredentials: true,\n    });\n  }\n\n  getComments = () => this.instance.get(\"/\");\n  getComment = (id) => this.instance.get(`/${id}`);\n  deleteComment = (id) => this.instance.delete(`/${id}`);\n  createComment = (comment) => this.instance.post(\"/\", comment);\n}\n\nexport default CommentService;\n","import React, { useState } from \"react\";\nimport CommentService from \"../../../services/comment.service\";\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\nimport { FaStar } from \"react-icons/fa\"\nimport \"./CommentForm.css\"\n\nconst commentService = new CommentService();\n\nconst CommentForm = (props) => {\n    const [content, setContent] = useState(\"\")\n    const [rating, setRating] = useState(null)\n    const [hover, setHover] = useState(null)\n\n    const clearState = () => {\n        setContent(\"\")\n        setRating(0)\n    }\n\n    const handleChange = (e) => {\n        const {value, name} = e.target;\n\n        switch (name) {\n            case \"content\":\n                setContent(value);\n                break;\n            case \"rating\":\n                setRating(value);\n                break;\n            default:\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const authorId = props.loggedUser;\n\n        commentService\n            .createComment({ content, rating, authorId })\n            .then(() => {\n                clearState()\n            })\n            .catch((err) => console.log(err, 'jgfkjhgkjghj'))\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Form onSubmit={handleSubmit}>\n              <h1>Review this seller </h1>\n              {[...Array(5)].map((star, idx) => {\n                const ratingValue = idx + 1;\n\n                return (\n                  <label key={idx}>\n                    <input\n                      id=\"starRadio\"\n                      type=\"radio\"\n                      name=\"rating\"\n                      value={ratingValue}\n                      onClick={(e) => handleChange(e)}\n                    />\n                    <FaStar\n                      className=\"star\"\n                      color={\n                        ratingValue <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\"\n                      }\n                      size={30}\n                      onMouseEnter={() => setHover(ratingValue)}\n                      onMouseLeave={() => setHover(null)}\n                    />\n                  </label>\n                );\n              })}\n\n              <Form.Group className=\"mb-3\" controlId=\"content\">\n                <Form.Label>Additional comment:</Form.Label>\n                <Form.Control\n                  onChange={(e) => handleChange(e)}\n                  name=\"content\"\n                  value={content}\n                  type=\"text\"\n                  placeholder=\"Your comment goes here\"\n                />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n}\n\nexport default CommentForm","import PlantService from \"../../../../services/plant.service\";\nimport { Button } from \"react-bootstrap\";\n\nconst RemoveItem = ({ id }, props) => {\n  const plantService = new PlantService();\n\n  const removePlant = (id) => {\n    plantService\n      .deletePlant(id)\n      .then((res) => {\n        props.history.push(\"/\");\n      })\n      .catch((err) => console.log(\"error on delete your plant\", err));\n  };\n\n  return (\n    <Button onClick={(id) => removePlant(id)} variant=\"primary\" type=\"button\">\n      Delete a plant\n    </Button>\n  );\n};\n\nexport default RemoveItem;\n","import React, { useEffect, useState } from \"react\"\nimport { Button, Form, Spinner } from \"react-bootstrap\"\nimport PlantService from \"../../../../services/plant.service\";\nimport UploadService from \"../../../../services/upload.service\";\n\nconst plantService = new PlantService();\nconst uploadService = new UploadService();\n\nconst EditPlant = (props, loggedUser) => {\n    \n    const { id } = props.match.params\n\n    const [name, setName] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [size, setSize] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [toxic, setToxic] = useState(false);\n    const [location, setLocation] = useState([]);\n    const [temperature, setTemperature] = useState(0);\n    const [watering, setWatering] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [isLoading, setIsLoading] = useState(false);\n    \n\n    const findPlant = (id) => {\n\n        plantService\n            .getPlant(id)\n            .then(plant => {\n\n                setName(plant.data.plant.name);\n                setImage(plant.data.plant.image);\n                setSize(plant.data.plant.description.size);\n                setType(plant.data.plant.description.type);\n                setToxic(plant.data.plant.description.toxic);\n                setLocation(plant.data.plant.description.location);\n                setTemperature(plant.data.plant.description.temperature);\n                setWatering(plant.data.plant.description.watering);\n                setPrice(plant.data.plant.price);\n            })\n            .catch(err => console.log(err))\n    }\n\n        useEffect(() => {\n            findPlant(id)\n\n        }, [id])\n            \n              \n        const clearState = () => {\n            setName(\"\");\n            setImage(\"\");\n            setSize(\"\");\n            setType(\"\");\n            setToxic(false);\n            setLocation([]);\n            setTemperature(0);\n            setWatering(\"\");\n            setPrice(0);\n        };\n\n\n        const handleChange = (e) => {\n            let { value, name, type } = e.target;\n        \n            let newValue = [...location];\n            if (name === \"location\" && e.target.checked) {\n                newValue.push(value);\n            }\n            if (name === \"location\" && !e.target.checked) {\n                newValue.splice(newValue.indexOf(value), 1);\n            }\n        \n            type === \"radio\" && (value === \"true\" ? (value = true) : (value = false));\n        \n            switch (name) {\n                case \"name\":\n                setName(value);\n                break;\n                case \"image\":\n                setImage(value);\n                break;\n                case \"size\":\n                setSize(value);\n                break;\n                case \"type\":\n                setType(value);\n                break;\n                case \"toxic\":\n                setToxic(value);\n                break;\n                case \"location\":\n                setLocation(newValue);\n                break;\n                case \"price\":\n                setPrice(value);\n                break;\n                case \"temperature\":\n                setTemperature(value);\n                break;\n                case \"watering\":\n                setWatering(value);\n                break;\n                default:\n            }\n        };\n\n            const handleSubmitUpdate = (e) => {\n              \n            e.preventDefault();\n\n            plantService\n                .editPlant(id, {\n                    name,\n                    image,\n                    description: { size, type, toxic, location, temperature, watering },\n                    sellerId: props.loggedUser._id,\n                    price,\n                })\n                .then((res) => {\n                clearState();\n                })\n                .catch((err) => console.error(err));\n            };\n\n\n            const handleFile = (e) => {\n            setIsLoading(true);\n        \n            const uploadData = new FormData();\n            uploadData.append(\"imageData\", e.target.files[0]);\n        \n            uploadService\n                .uploadImg(uploadData)\n                .then((res) => {\n                    setIsLoading(false);\n                    setImage(res.data.cloudinary_url);\n                })\n                .catch((err) => alert(\"Error, image not uploaded \"));\n            };\n            \n\n\n\n           \n\n    return(\n<>\n      <h1 className=\"text-center mt-2 mb-3\">Edit your plant</h1>\n      <Form onSubmit={handleSubmitUpdate}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"name\"\n            value={name}\n            type=\"text\"\n            placeholder=\"Plant's name\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"image\">\n          <Form.Label>Image*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleFile(e)}\n            name=\"image\"\n            type=\"file\"\n            placeholder=\"Plant's image\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"size\">\n          <Form.Label>Size*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"size\"\n            value={size}\n            type=\"text\"\n            placeholder=\"Plant's sizes\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"type\">\n          <Form.Label>Type*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"type\"\n            value={type}\n            type=\"text\"\n            placeholder=\"Plant's type\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"toxic\">\n          <Form.Label>Is it toxic for animals?*</Form.Label>\n          {[\"radio\"].map((type) => (\n            <div key={`inline-${type}`}>\n              <Form.Check\n                inline\n                label=\"Yes\"\n                name=\"toxic\"\n                type=\"radio\"\n                id={`inline-${type}-1`}\n                value={true}\n                onChange={(e) => handleChange(e)}\n              />\n              <Form.Check\n                inline\n                label=\"No\"\n                name=\"toxic\"\n                type=\"radio\"\n                id={`inline-${type}-2`}\n                value={false}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n          ))}\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"location\">\n          <Form.Label>Location?*</Form.Label>\n          {[\"checkbox\"].map((type) => (\n            <div key={`inline-${type}`} className=\"mb-3\">\n              <Form.Check\n                inline\n                label=\"Indoors\"\n                name=\"location\"\n                type={type}\n                id={`inline-${type}-1`}\n                onChange={(e) => handleChange(e)}\n                value=\"Indoors\"\n              />\n              <Form.Check\n                inline\n                label=\"Outdoors\"\n                name=\"location\"\n                type={type}\n                id={`inline-${type}-2`}\n                onChange={(e) => handleChange(e)}\n                value=\"Outdoors\"\n              />\n            </div>\n          ))}\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"temperature\">\n          <Form.Label>Temperature*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"temperature\"\n            value={temperature}\n            type=\"number\"\n            placeholder=\"Temperature\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"watering\">\n          <Form.Label>Watering*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"watering\"\n            value={watering}\n            type=\"text\"\n            placeholder=\"Watering\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"price\">\n          <Form.Label>Price*: </Form.Label>\n          <Form.Control\n            onChange={(e) => handleChange(e)}\n            name=\"price\"\n            value={price}\n            type=\"number\"\n            placeholder=\"Price\"\n          />\n          €\n        </Form.Group>\n\n        {isLoading && <Spinner animtion=\"border\" variant=\"success\" />}\n\n        <Button disabled={isLoading} variant=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Submit\"}\n        </Button>\n      </Form>\n    </>\n  );\n\n}\n\nexport default EditPlant","import axios from \"axios\";\n\nclass MessageService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/message`,\n      withCredentials: true,\n    });\n  }\n\n  getMessages = () => this.instance.get(\"/\");\n  getMessage = (id) => this.instance.get(`/${id}`);\n  createMessage = (message) => this.instance.post(\"/\", message);\n  deleteMessage = (id) => this.instance.delete(`/${id}`);\n}\n\nexport default MessageService;\n","import React, { useEffect, useState } from \"react\";\nimport MessageService from \"../../../services/message.service\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport \"../../../App.css\"\nimport \"./SendMessage.css\"\n\n\nconst messageService = new MessageService();\n\nconst SendMessage = ({seller, loggedUser}) => {\n\n\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [username, setUsername] = useState(\"\")\n  const [address, setAddress] = useState(\"\")\n  const [avatar, setAvatar] = useState(\"\")\n  const [plantSellerId, setPlantSellerId] = useState(undefined)\n  const [error, setError] = useState(\"\")\n  const [success, setSuccess] = useState(\"\")\n\n\n\n  useEffect(() => {\n    const getOneUser = (seller) => {\n\n      setUsername(seller?.username)\n      setAddress(seller?.address)\n      setAvatar(seller?.avatar)\n      setPlantSellerId(seller?._id)\n\n    }\n\n    getOneUser(seller)\n  }, [seller])\n\n  useEffect(() => {\n    setUsername(seller?.username)\n    setAddress(seller?.address)\n    setAvatar(seller?.avatar)\n    setPlantSellerId(seller?._id)\n    \n  }, [seller, loggedUser])\n\n  const clearState = () => {\n    setSubject(\"\");\n    setContent(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case \"content\":\n        setContent(value);\n        break;\n      case \"subject\":\n        setSubject(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const authorId = loggedUser._id;\n    const receiverId = plantSellerId\n    messageService\n      .createMessage({ content, subject, authorId, receiverId })\n      .then((res) => {\n        clearState();\n        //setTimeout(() => setSuccess(undefined),2500)\n      })\n      .catch((err) => {\n       // setTimeout(() => setError(undefined),2500)\n        console.log(err)\n      });\n  };\n\n  return (\n    <>\n      <Form className=\"container send__message\" onSubmit={handleSubmit}>\n        <Row className=\"justify-content-center d-flex\">\n          <h6 className=\"text-center\">\n            Send a message to {username} <img src={avatar} alt=\"User \" />\n          </h6>\n        </Row>\n        <Row>\n          <Form.Group className=\"mb-3\" controlId=\"subject\">\n            <Form.Label>Subject:* </Form.Label>\n\n            <Form.Control\n              className=\"rounded-pill\"\n              onChange={(e) => handleChange(e)}\n              name=\"subject\"\n              value={subject}\n              type=\"text\"\n              placeholder=\"Subject\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"content\">\n            <Form.Label>Message:* </Form.Label>\n            <Form.Control\n              className=\"rounded-pill\"\n              onChange={(e) => handleChange(e)}\n              name=\"content\"\n              value={content}\n              type=\"text\"\n              placeholder=\"Type here your message\"\n            />\n          </Form.Group>\n\n          <Button className=\"rounded-pill mt-3\" variant=\"success\" type=\"submit\">\n            Submit\n          </Button>\n          {error && <p id=\"errorMessage\">{error}</p>}\n          {success && <p id=\"successMessage\">{success}</p>}\n        </Row>\n      </Form>\n    </>\n  );\n};\n\nexport default SendMessage;\n","import { useState } from \"react\"\nimport { Button, Container, Modal, Row, Spinner } from \"react-bootstrap\"\nimport SendMessage from \"../../SendMessage/SendMessage\"\nimport \"./MessageForm.css\"\n\n\nconst MessageForm = (props) => {\n\n  const { seller } = props\n  const { loggedUser } = props\n  \n    const [showForm,setShowForm] = useState(false)\n\n    const openModal = () => {\n        setShowForm(true)\n    }\n\n    const closeModal = () => {\n        setShowForm(false)\n    }\n\n    return (\n      <Container className=\"d-flex justify-content-center\">\n        <Button\n          variant=\"success\"\n          block\n          className=\"mt-2 mb-5 rounded-pill\"\n          onClick={() => openModal()}\n        >\n          Reply to {seller.username}\n        </Button>\n\n        <Modal show={showForm} onHide={() => closeModal()}>\n          <Modal.Header closeButton>\n            <Modal.Title className=\"modal__title\">What would you like to say?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <SendMessage\n              loggedUser={loggedUser}\n              seller={seller}\n              closeModal={() => closeModal()}\n            />\n          </Modal.Body>\n        </Modal>\n      </Container>\n    );\n\n}\n\nexport default MessageForm","import { useEffect, useState } from \"react\"\nimport PlantService from \"../../../services/plant.service\"\nimport { Card, Container, ListGroup, ListGroupItem } from \"react-bootstrap\"\nimport RemoveItem from \"./RemoveItem/RemoveItem\"\nimport { Link } from \"react-router-dom\"\nimport EditPlant from \"./Editplant/Editplant\"\nimport MessageForm from \"./MessageForm/MessageForm\"\nconst { formatDate } = require(\"../../../utils/index\")\n\n\nconst PlantDetails = (props) => {\n  const plantService = new PlantService();\n  const [plantsDetails, setPlantsDetails] = useState(undefined);\n  const { id } = props.match.params;\n  // const user = plantsDetails.sellerId\n  const [user, setUser] = useState({})\n  \n\n  const getOnePlant = (id) => {\n    plantService\n      .getPlant(id)\n      .then((plant) => {\n        return setPlantsDetails(plant.data.plant);\n      })\n      .then(() => setUser(plantsDetails?.sellerId))\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n     getOnePlant(id);\n  }, []); \n\n  useEffect(() => {\n    plantsDetails || getOnePlant(id);\n  }, [props]);\n\n  return (\n    <>\n      {plantsDetails ? (\n        <div>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Img variant=\"top\" src={plantsDetails.image} />\n            <Card.Body>\n              <Card.Title>{plantsDetails.name}</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>Price:{plantsDetails.price}</ListGroupItem>\n              {plantsDetails.sellerId.address && (\n                <>\n                  <ListGroupItem>\n                    City: {plantsDetails.sellerId.address.split(\",\")}\n                  </ListGroupItem>\n                </>\n              )}\n              {plantsDetails.description.size && (\n                <>\n                  <ListGroupItem>\n                    Size: {plantsDetails.description.size}\n                  </ListGroupItem>\n                </>\n              )}\n              {plantsDetails.description.type && (\n                <>\n                  <ListGroupItem>\n                    Type: {plantsDetails.description.type}\n                  </ListGroupItem>\n                </>\n              )}\n              {plantsDetails.description.toxic && (\n                <>\n                  <ListGroupItem>\n                    Toxic: {plantsDetails.description.toxic}\n                  </ListGroupItem>\n                </>\n              )}\n              {plantsDetails.description.temperature && (\n                <>\n                  <ListGroupItem>\n                    Temperature: {plantsDetails.description.temperature}\n                  </ListGroupItem>\n                </>\n              )}\n              {plantsDetails.description.watering && (\n                <>\n                  <ListGroupItem>\n                    Watering: {plantsDetails.description.watering}\n                  </ListGroupItem>\n                </>\n              )}\n              {plantsDetails.delivery && (\n                <>\n                  <ListGroupItem>\n                    Delivery time: {plantsDetails.delivery} days~\n                  </ListGroupItem>\n                </>\n              )}\n              <div>\n                <>\n                  {props.loggedUser?.role === \"Admin\" && (\n                    <RemoveItem id={id} {...props} />\n                  )}\n                </>\n              </div>\n\n              <div>\n                <>\n                  {props.loggedUser?._id === plantsDetails.sellerId._id && (\n                    <Container>\n                      <RemoveItem\n                        sellerDetails={plantsDetails.sellerId}\n                        {...props}\n                      />\n                      <Link className=\"btn bg-success\" to={`/edit-plant/${id}`}>\n                        Edit plant\n                      </Link>\n                    </Container>\n                  )}\n                </>\n              </div>\n\n              {props.loggedUser ? (\n                <h2> Hello {props.loggedUser.username} </h2>\n              ) : (\n                <div>\n                  <>\n                    <p>\n                      <Link to=\"/login\">Login</Link> in order to see our seller\n                    </p>\n                  </>\n                </div>\n              )}\n              <>\n                {props.loggedUser &&\n                  props.loggedUser?.username !==\n                    plantsDetails.sellerId.username && (\n                    <div>\n                      <hr />\n\n                      <Card.Img\n                        variant=\"top\"\n                        src={plantsDetails.sellerId?.avatar}\n                      />\n                      <ListGroupItem>\n                        <h3>Name: {plantsDetails.sellerId?.username}</h3>\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        <h4>Role: {plantsDetails.sellerId?.role}</h4>\n                      </ListGroupItem>\n                      {/* <ListGroupItem>\n                      Plantb user since:{\" \"}\n                      {formatDate(plantsDetails.sellerId?.createdAt)}\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      Address: {plantsDetails.sellerId?.address}\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      Email: {plantsDetails.sellerId?.email}\n                    </ListGroupItem> */}\n                      <Card.Body>\n                        <MessageForm\n                          {...props}\n                          seller={plantsDetails.sellerId}\n                        />\n                        <Card.Link href=\"#\">Another Link</Card.Link>\n                      </Card.Body>\n                    </div>\n                  )}\n              </>\n            </ListGroup>\n          </Card>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default PlantDetails;\n","import \"./PlantsList.css\"\nimport PlantService from \"../../../services/plant.service\";\nimport { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport CartService from \"../../../services/cart.service\";\n\n\nconst PlantsList = (props) => {\n  \n     const plantService = new PlantService();\n     const cartService = new CartService();\n\n     const [plantsList, setPlantsList] = useState([]);\n     const [user, setUser] = useState(\"\")\n\n     console.log(user)\n\n     useEffect(() => {\n        plantService\n            .getPlants()\n            .then((plants) => {\n                setPlantsList(plants.data)\n            })\n            .catch((err) => console.log(\"Error while trying to get plants list\", err))\n    }, []);\n\n    useEffect(() => {\n\n      setUser(props.loggedUser)\n\n    }, [props.loggedUser])\n    \n    \n    const addToCart = (plantId) => {   \n\n      cartService\n          .editCart(user.cart, plantId)\n          .then(res => {\n              console.log(res)\n              props.refreshTotal();\n          })\n          .catch((err) => console.log(err));\n    };\n\n    return (\n      <>\n        {plantsList ? (\n          <Container className=\"plantslist\">\n            <h1 className=\"text-center\">Latest plants</h1>\n            <Row>\n              {plantsList.map((plant) => {\n                return (\n                  <Col xs={12} sm={6} lg={4}>\n                    <div className=\"plantslist_imagecontainer\">\n                      <img alt=\"plant's pic\" src={plant.image} />\n                    </div>\n                    <p>{plant.name}</p>\n                    <p>{plant.price}€</p>\n                    <Row>\n                      <Col xs={12} sm={12} lg={6} className=\"d-flex justify-content-center\">\n                        <Link\n                          to={`/plant/${plant._id}`}\n                          className=\"btn btn-success rounded-pill\"\n                        >See details</Link>\n                      </Col>\n                      <Col className=\"d-flex justify-content-center\" xs={12} sm={12} lg={6} >\n                      {/* <Link to={``}> */}\n                          <button onClick={() => addToCart(plant._id)} className=\"btn btn-outline-success rounded-pill\" type=\"submit\"><FaShoppingCart/> Add to cart</button>\n                      {/* </Link> */}\n                      </Col>\n                    </Row>\n                    <hr className=\"mt-5 mb-5\" />\n                  </Col>\n                );\n              })}\n            </Row>\n          </Container>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </>\n    );\n}\n\nexport default PlantsList","import './CartItem.css'\nimport { Link }  from 'react-router-dom'\nimport { ListGroupItem } from 'react-bootstrap'\nimport { useState } from 'react'\nimport CartService from '../../../services/cart.service'\nimport { useEffect } from 'react'\n\nconst cartService = new CartService()\n\nconst CartItem = ({ userCart, history }) => {\n\n  \n  const [userItems, setUserItems] = useState(\"\")\n  // console.log(userCart._id)\n  const [itemId, setId] = useState(\"\")\n  \n\n  useEffect(()=> {\n    setId(userCart?._id)\n\n  }, [userCart])\n\n  const removeItem = (userCart, id ) => {\n    console.log(id)\n\n    cartService\n        .removeItem(userCart, id)\n        .then(res => {\n          console.log(\"element just drop off the cart.\", res)\n          history.push(\"/plants\")\n        })\n        .catch(err => console.log(err))\n  }\n  \n    return (\n      <>\n     {userCart?.items.map(el =>{\n       return(\n         <>\n        <div className=\"cart\">\n        <div className=\"cartitem__image\"><img src={el.image} alt=\"User \" /></div>\n\n        <Link to={`/product/${111}`} className=\"cartitem__name\">\n          <p>{el.name}</p>\n        </Link>\n        {el.description.type && (\n          <>\n            <ListGroupItem>\n              Type: {el.description.type}\n            </ListGroupItem>\n          </>\n        )}\n        {el.description.size && (\n          <>\n            <ListGroupItem>\n              Size: {el.description.size}\n            </ListGroupItem>\n          </>\n        )}\n        {el.description.temperature && (\n          <>\n            <ListGroupItem>\n              Temperature: {el.description.temperature}\n            </ListGroupItem>\n          </>\n        )}\n        {el.description.watering && (\n          <>\n            <ListGroupItem>\n              Watering: {el.description.watering}\n            </ListGroupItem>\n          </>\n          \n        )}\n        <button onClick={ () => removeItem(userCart._id, el._id) }>\n            <i className=\"fas fa-trash\">Remove Item </i>\n        </button>\n        \n      </div>\n      </>\n       )\n     })\n     }\n     </>\n    );\n}\n\nexport default CartItem\n","import \"./Cart.css\";\nimport CartItem from \"./../CartItem/CartItem\";\nimport CartService from \"../../../services/cart.service\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst cartService = new CartService();\n\nconst Cart = (props) => {\n  const [userCart, setCart] = useState(undefined);\n  const [id, setId] = useState(\"props\");\n  console.log(userCart);\n\n  useEffect(() => {\n    setId(props.loggedUser.cart);\n  }, [props.loggedUser]);\n\n  useEffect(() => {\n    cartService.getCart(id).then((cartFound) => {\n      setCart(cartFound.data);\n    });\n  }, [id]);\n\n  const totalPrice = (userCart) => {\n    let price = userCart?.items.reduce((a, b) => a + b.price, 0);\n\n    return <p>{price}&#8364;</p>;\n  };\n\n  useEffect(() => {\n    totalPrice(userCart);\n  }, []);\n\n  return (\n    <div className=\"cart\">\n      <div className=\"cart__left\">\n        <h2>Shopping cart</h2>\n\n        <CartItem userCart={userCart} {...props} />\n      </div>\n      <div className=\"cart__right\">\n        <div className=\"cart__info\">\n          <p>Subtotal {userCart?.items.length} items</p>\n          <p>{totalPrice(userCart)}</p>\n        </div>\n        <div>\n          <Link to={`/checkout/${userCart?._id}`}>\n            <button>Proceed to checkout</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\"\nimport { Card, Col, Container, Row } from \"react-bootstrap\"\nimport MessageService from \"../../../../services/message.service\"\nimport MessageForm from \"../../PlantDetails/MessageForm/MessageForm\"\nimport \"./MessageList.css\"\n\nconst { formatDate } = require(\"../../../../utils/index\")\n\n\nconst MessageList = (props) => {\n    const messageService = new MessageService()\n    const [ message, setMessage] = useState(null)\n    const { loggedUser } = props\n    const { id } = props.match.params  \n     \n    const getMessages = (id) => {\n        \n        messageService\n            .getMessages({authorId: id})\n            .then(messages => {\n                setMessage(messages?.data)\n            })\n            .catch(err => console.log(err))\n        }\n\n    useEffect(() => getMessages(), [getMessages, id])\n\n\n    return (\n    <>\n      <Container className=\"messages__container d-flex justify-content-center\">\n        <Row className=\"justify-content-center d-flex\">\n            {message?.map((el) => {\n            return (\n              <>\n                {loggedUser._id === el.receiverId ? (\n                  <>\n                    <Col className=\"message__card m-2\" xs={11} sm={5} lg={3}>\n                      <Row className=\"mt-2\">\n                        <Col xs={6} sm={6} lg={6}>\n                          <img\n                            className=\"messages__avatar\"\n                            src={el.authorId.avatar}\n                            alt=\"User \"\n                          />\n                        </Col>\n                        <Col>\n                          <h6><strong>{el.authorId.username}</strong></h6>\n                          <p>on <strong>{formatDate(el.createdAt)}</strong></p>\n                        </Col>\n                        <hr/>\n                      </Row>\n\n                      <p><strong>Subject:</strong> {el.subject}</p>\n                      <hr/>\n                      <p>{el.content}</p>\n                      <div className=\"d-grid gap-2\">\n                        <MessageForm {...props} seller={el.authorId} />\n                      </div>\n                    </Col>\n                  </>\n                ) : null}\n              </>\n            );\n            })}\n        </Row>  \n     </Container>\n     <p className=\"no__message\">No more messages found</p>\n     </>\n    );\n\n}\n\nexport default MessageList\n\n{/* <Card className=\"text-center\">\n                    <Card.Header>\n                      <img src={el.authorId.avatar} width=\"40px\" alt=\"User \" />\n                      {el.authorId.username}\n                    </Card.Header>\n                    <Card.Body>\n                      <Card.Title>{el.subject}</Card.Title>\n                      <Card.Text>{el.content}</Card.Text>\n                      <MessageForm {...props} seller={el.authorId} />\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\">\n                      {formatDate(el.createdAt)}\n                    </Card.Footer>\n                  </Card> */}","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ListGroupItem } from \"react-bootstrap\";\nimport CartService from \"../../../services/cart.service\";\nimport PlantService from \"../../../services/plant.service\";\n\nconst cartService = new CartService()\nconst plantService = new PlantService()\n\nconst Checkout = (props) => {\n\n  const [userCart, setCart] = useState(undefined);\n  const [userSeller, setSeller] = useState(\"\");\n  const [cartId, setId] = useState(\"\");\n  const [plants, setPlants] = useState([]);\n  const [plantSellerId, setPlantSellerId] = useState([]);\n  const [cartSellerId, setCartSellerId] = useState(\"\");\n\n\n  console.log(\"esto es cartSellerId\", cartSellerId)\n  console.log(\"esto es plants seller id\", plantSellerId)\n\n\n  useEffect(() => {\n    plantService.getPlants().then((plantFound) => {\n      setPlants(plantFound.data)\n    });\n    // displayCheckout(userCart, plants)\n  }, [cartId]);\n\n\n  useEffect(() => {\n    setId(props.loggedUser.cart);\n  }, [props.loggedUser]);\n\n  useEffect(() => {\n    cartService.getCart(cartId).then((cartFound) => {\n      setCart(cartFound.data);\n\n    });\n  }, []);\n\n\n  //       ellerId:\n  // address: \"Gran Via 2, Madrid, Spain\"\n  // age: \"2021-09-22T00:00:00.000Z\"\n  // avatar: \"https://res.cloudinary.com/dubhsyrde/image/upload/v1633342742/jkifxclbzlpfrkowxbh4.png\"\n  // cart: \"615ad52953cb83366a8a823c\"\n  // createdAt: \"2021-09-28T15:51:56.129Z\"\n  // email: \"popino@popino.com\"\n  // password: \"$2b$10$/CoaY5vswSGmVDeW.qJowe5jMFhZrEMTX6uH6jpww7RzBzdZ4k3oe\"\n  // role: \"User\"\n  // updatedAt: \"2021-10-05T15:03:55.526Z\"\n  // username: \"Popino\"\n  // validated: false\n  // __v: 0\n  // _id: \"61533a1c72c01d78e05e7e90\"\n\n\n  return (\n    <>\n      <h1 className=\"mt-5 text-center\">Redirect to your Bank account website...</h1>\n    </>\n  )\n}\n\nexport default Checkout","import Home from \"./../pages/Home/Home\"\nimport Login from \"../pages/Login/Login\";\nimport SignUp from \"../pages/Signup/Signup\";\nimport Profile from \"./../pages/Profile/Profile\";\nimport PlantForm from \"../pages/PlantForm/PlantForm\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CommentForm from \"../pages/CommentForm/CommentForm\";\nimport PlantDetails from \"../pages/PlantDetails/PlantDetails\";\nimport EditPlant from \"../pages/PlantDetails/Editplant/Editplant\";\nimport SendMessage from \"../pages/SendMessage/SendMessage\";\nimport PlantsList from \"../pages/PlantsList/PlantsList\";\nimport Cart from \"../pages/Cart/Cart\"\n\nimport MessageList from \"../pages/messages/MessageList/MessageList\";\nimport Checkout from \"../pages/Checkout/Checkout\";\n\nconst Routes = ({ storeUser, loggedUser, refreshTotal }) => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" render={ (props) => <Home/> }/>\n      <Route exact path=\"/new-plant\" render={ (props) => loggedUser ? (<PlantForm { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\n      <Route exact path=\"/new-plant\" render={ (props) => <PlantForm { ...props } loggedUser={ loggedUser } /> } />\n      <Route exact path=\"/checkout/:id\" render={ (props) => loggedUser ? (<Checkout { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\n      <Route exact path=\"/new-comment\" render={ (props) => loggedUser ? ( <CommentForm { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\n      <Route path=\"/new-message\" render={ (props) => loggedUser ? ( <SendMessage { ...props } loggedUser={ loggedUser } />) : (<Redirect to=\"/login\" />)}/>\n      <Route exact path=\"/register\" render={ (props) => <SignUp storeUser={ storeUser } { ...props } /> } />\n      <Route exact path=\"/login\" render={ (props) => <Login storeUser={ storeUser } { ...props } /> } />\n      <Route exact path=\"/new-plant\" render={ (props) => <PlantForm { ...props } loggedUser={ loggedUser } /> } />\n      <Route path=\"/plant/:id\" render={ (props) => <PlantDetails { ...props } loggedUser={ loggedUser } /> } />\n      <Route exact path=\"/new-comment\" render={ (props) => <CommentForm { ...props } loggedUser={ loggedUser } /> } />\n      <Route exact path=\"/login\" render={ (props) => <Login storeUser={ storeUser } { ...props } /> } />\n      <Route path=\"/edit-plant/:id\" render={ (props) => <EditPlant { ...props } loggedUser={ loggedUser } /> } />\n      <Route path=\"/plants\" render={(props) => <PlantsList {...props} loggedUser={ loggedUser } refreshTotal={refreshTotal} /> }/>\n      <Route path=\"/plants/:username\" render={(props) => <PlantsList {...props} loggedUser={ loggedUser } /> }/>\n      <Route path=\"/cart\" render={(props) => <Cart {...props} loggedUser={ loggedUser }/>}/>\n      <Route path=\"/message-list/:id\" render={ (props) => <MessageList {...props} loggedUser={loggedUser}/>} />\n        \n      { loggedUser !== null ? (\n        <Route path={ `/${loggedUser.username}` } render={(props) => <Profile { ...props } loggedUser={ loggedUser } /> } />\n      ) \n      : \n      (\n        <Route path=\"/\" render={ () => <Redirect to=\"/login\" /> } />\n      )}\n\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Navigation from \"./components/layout/Navigation/Navigation\";\nimport Routes from \"./components/routes\";\nimport AuthService from \"./services/auth.service\";\n\nconst authService = new AuthService();\n\nconst App = () => {\n  const [loggedUser, setLoggedUser] = useState(undefined);\n  const storeUser = (user) => setLoggedUser(user);\n\n  const [refreshTotal, setRefreshTotal] = useState(false);\n\n  useEffect(() => console.log(refreshTotal))\n\n  useEffect(() => {\n    if (loggedUser !== undefined) return;\n\n    const fetchUser = () => {\n      authService\n        .isloggedin()\n        .then((res) => storeUser(res.data))\n        .catch(() => storeUser(null));\n    };\n    fetchUser();\n  }, [loggedUser]);\n\n  return (\n    <>\n      <Navigation loggedUser={loggedUser} storeUser={storeUser} refreshTotal={refreshTotal} />\n\n      {loggedUser !== undefined ? (\n        <Routes storeUser={storeUser} loggedUser={loggedUser} refreshTotal={() => setRefreshTotal(!refreshTotal)}/>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","module.exports = {\n  formatDate: date => {\n\n    let dateF = new Date(date)\n\n    let month = '' + (dateF.getMonth() + 1)\n    let day = '' + dateF.getDate()\n    let year = dateF.getFullYear()\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-')\n  },\n\n\n  formatSignDate: date => {\n\n    var today = new Date();\n  \n    let month = '' + (today.getMonth() + 1)\n    let day = '' + today.getDate()\n    let year = today.getFullYear() - 18\n\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-')\n  }\n}"],"sourceRoot":""}